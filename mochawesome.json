{
  "stats": {
    "suites": 3,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2024-01-23T10:45:30.929Z",
    "end": "2024-01-23T10:52:17.347Z",
    "duration": 406418
  },
  "results": [
    {
      "uuid": "9d2843cc-e95e-4a95-936d-ac91ed7be01c",
      "title": "",
      "fullFile": "tests\\e2e\\login-user.cy.js",
      "file": "tests\\e2e\\login-user.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a65d587f-abcf-4d87-8559-e12867c1b015",
          "title": "Login feature",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully log in with valid credentials",
              "fullTitle": "Login feature should successfully log in with valid credentials",
              "timedOut": null,
              "duration": 933,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: _routes.BASE_URL.baseUrl + _routes.LOGIN.login,\n  form: true,\n  body: {\n    email: _login.VALID_LOGIN.email,\n    password: _login.VALID_LOGIN.password\n  }\n}).then(response => {\n  cy.log(response.body);\n  expect(response.body).to.equal('{\"responseCode\": 200, \"message\": \"User exists!\"}');\n});",
              "err": {},
              "uuid": "c948c649-0685-4dc7-888a-5d5946715c3e",
              "parentUUID": "a65d587f-abcf-4d87-8559-e12867c1b015",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail log in with invalid email",
              "fullTitle": "Login feature should fail log in with invalid email",
              "timedOut": null,
              "duration": 277,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: _routes.BASE_URL.baseUrl + _routes.LOGIN.login,\n  form: true,\n  body: {\n    email: _login.INVALID_LOGIN.email,\n    password: _login.INVALID_LOGIN.password\n  }\n}).then(response => {\n  cy.log(response.body);\n  expect(response.body).to.equal('{\"responseCode\": 404, \"message\": \"User not found!\"}');\n});",
              "err": {},
              "uuid": "5a1f9dc7-0e70-4aac-a7cd-3ab3a8c8cfe6",
              "parentUUID": "a65d587f-abcf-4d87-8559-e12867c1b015",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail log in with invalid password",
              "fullTitle": "Login feature should fail log in with invalid password",
              "timedOut": null,
              "duration": 251,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: _routes.BASE_URL.baseUrl + _routes.LOGIN.login,\n  form: true,\n  body: {\n    email: _login.INVALID_LOGIN_PASSWORD.email,\n    password: _login.INVALID_LOGIN_PASSWORD.password\n  }\n}).then(response => {\n  cy.log(response.body);\n  expect(response.body).to.equal('{\"responseCode\": 404, \"message\": \"User not found!\"}');\n});",
              "err": {},
              "uuid": "3fbecc54-aa02-40e9-9fa9-8da16ed8eac8",
              "parentUUID": "a65d587f-abcf-4d87-8559-e12867c1b015",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c948c649-0685-4dc7-888a-5d5946715c3e",
            "5a1f9dc7-0e70-4aac-a7cd-3ab3a8c8cfe6",
            "3fbecc54-aa02-40e9-9fa9-8da16ed8eac8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1461,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e7029af8-07ad-46c9-8fb4-e101402d99d3",
      "title": "",
      "fullFile": "tests\\e2e\\login-user.cy.js",
      "file": "tests\\e2e\\login-user.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aa106e0e-0e7d-4c87-9e38-a52ecd1e4d25",
          "title": "Login feature",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully log in with valid credentials",
              "fullTitle": "Login feature should successfully log in with valid credentials",
              "timedOut": null,
              "duration": 1081,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: _routes.BASE_URL.baseUrl + _routes.LOGIN.login,\n  form: true,\n  body: {\n    email: _login.VALID_LOGIN.email,\n    password: _login.VALID_LOGIN.password\n  }\n}).then(response => {\n  cy.log(response.body);\n  expect(response.body).to.equal('{\"responseCode\": 200, \"message\": \"User exists!\"}');\n});",
              "err": {},
              "uuid": "9be767db-6da7-4ef7-9c4b-defd69884735",
              "parentUUID": "aa106e0e-0e7d-4c87-9e38-a52ecd1e4d25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail log in with invalid email",
              "fullTitle": "Login feature should fail log in with invalid email",
              "timedOut": null,
              "duration": 263,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: _routes.BASE_URL.baseUrl + _routes.LOGIN.login,\n  form: true,\n  body: {\n    email: _login.INVALID_LOGIN.email,\n    password: _login.INVALID_LOGIN.password\n  }\n}).then(response => {\n  cy.log(response.body);\n  expect(response.body).to.equal('{\"responseCode\": 404, \"message\": \"User not found!\"}');\n});",
              "err": {},
              "uuid": "ba52acda-25cd-48bd-934c-21a563c685ed",
              "parentUUID": "aa106e0e-0e7d-4c87-9e38-a52ecd1e4d25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail log in with invalid password",
              "fullTitle": "Login feature should fail log in with invalid password",
              "timedOut": null,
              "duration": 267,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: _routes.BASE_URL.baseUrl + _routes.LOGIN.login,\n  form: true,\n  body: {\n    email: _login.INVALID_LOGIN_PASSWORD.email,\n    password: _login.INVALID_LOGIN_PASSWORD.password\n  }\n}).then(response => {\n  cy.log(response.body);\n  expect(response.body).to.equal('{\"responseCode\": 404, \"message\": \"User not found!\"}');\n});",
              "err": {},
              "uuid": "cffeb497-c0ab-4ec8-9362-0bc2277fc2f5",
              "parentUUID": "aa106e0e-0e7d-4c87-9e38-a52ecd1e4d25",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9be767db-6da7-4ef7-9c4b-defd69884735",
            "ba52acda-25cd-48bd-934c-21a563c685ed",
            "cffeb497-c0ab-4ec8-9362-0bc2277fc2f5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1611,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "505247a7-402b-40e3-82fd-d21ee2433992",
      "title": "",
      "fullFile": "tests\\e2e\\login-user.cy.js",
      "file": "tests\\e2e\\login-user.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "830e2878-4cbb-45fe-8a0f-6e8090d7d080",
          "title": "Login feature",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully log in with valid credentials",
              "fullTitle": "Login feature should successfully log in with valid credentials",
              "timedOut": null,
              "duration": 960,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: _routes.BASE_URL.baseUrl + _routes.LOGIN.login,\n  form: true,\n  body: {\n    email: _login.VALID_LOGIN.email,\n    password: _login.VALID_LOGIN.password\n  }\n}).then(response => {\n  cy.log(response.body);\n  expect(response.body).to.equal('{\"responseCode\": 200, \"message\": \"User exists!\"}');\n});",
              "err": {},
              "uuid": "6c441225-e8e7-43ee-925a-406d53a56bab",
              "parentUUID": "830e2878-4cbb-45fe-8a0f-6e8090d7d080",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail log in with invalid email",
              "fullTitle": "Login feature should fail log in with invalid email",
              "timedOut": null,
              "duration": 268,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: _routes.BASE_URL.baseUrl + _routes.LOGIN.login,\n  form: true,\n  body: {\n    email: _login.INVALID_LOGIN.email,\n    password: _login.INVALID_LOGIN.password\n  }\n}).then(response => {\n  cy.log(response.body);\n  expect(response.body).to.equal('{\"responseCode\": 404, \"message\": \"User not found!\"}');\n});",
              "err": {},
              "uuid": "5f1b07a1-6ac1-4e4d-b0ef-fccb123177c6",
              "parentUUID": "830e2878-4cbb-45fe-8a0f-6e8090d7d080",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail log in with invalid password",
              "fullTitle": "Login feature should fail log in with invalid password",
              "timedOut": null,
              "duration": 264,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: _routes.BASE_URL.baseUrl + _routes.LOGIN.login,\n  form: true,\n  body: {\n    email: _login.INVALID_LOGIN_PASSWORD.email,\n    password: _login.INVALID_LOGIN_PASSWORD.password\n  }\n}).then(response => {\n  cy.log(response.body);\n  expect(response.body).to.equal('{\"responseCode\": 404, \"message\": \"User not found!\"}');\n});",
              "err": {},
              "uuid": "6c78e406-70fb-418e-b39d-a4eb932ed224",
              "parentUUID": "830e2878-4cbb-45fe-8a0f-6e8090d7d080",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6c441225-e8e7-43ee-925a-406d53a56bab",
            "5f1b07a1-6ac1-4e4d-b0ef-fccb123177c6",
            "6c78e406-70fb-418e-b39d-a4eb932ed224"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1492,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "tests/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}